#include <EEPROM.h>
#include <SoftwareSerial.h>
SoftwareSerial gsm (9, 10);

#include <LiquidCrystal_I2C.h>
LiquidCrystal_I2C lcd(0x27, 16, 2);

unsigned long previousTime = millis();
unsigned long timeInterval = 20;
unsigned long previousTime1 = millis();
unsigned long timeInterval1 = 100;

String responseData, senderNumber, actual_sms, userPhone, OperatorPh, total_unit_str, pulse_str;
unsigned long randNumber;
String code1, code2, code3, code4, code5, code6;
String gen_code1, gen_code2, gen_code3, gen_code4, gen_code5, gen_code6;
String bill;

int total_unit;
unsigned long price = 0;
int unitPrice = 100;
int flag1 = 0, flag2 = 0;

void setup() {
  writeStringToEEPROM(120, "420144");
  writeStringToEEPROM(140, "+959974892150");
  writeStringToEEPROM(160, "+959799447661");
  responseData.reserve(128);
  Serial.begin(9600);
  gsmbegin();
  gsm_init();
  lcd.init();
  lcd.backlight();
  total_unit_str = readStringFromEEPROM(110);
  total_unit = total_unit_str.toInt();
  pswd = readStringFromEEPROM(120);
  lcd.setCursor(0, 0);
  lcd.print ("  Prepaid Smart   ");
  lcd.setCursor(0, 1);
  lcd.print ("  Energy Meter  ");
}

void loop() {
  phoneGetting();
  total_unit_str = readStringFromEEPROM(110);
  total_unit = total_unit_str.toInt();
  price = total_unit * unitPrice;
  unsigned long currentTime   = millis();

  if (total_unit == 2 && flag1 == 0) {
      send_message(userPhone, "Your balance is low! Please fill bill!");
      flag1 = 1;
    }
    if (total_unit == 0 && flag2 == 0) {
      send_message(userPhone, "Your balance is empty! Please fill bill!");
      digitalWrite(relay, LOW);
      flag2 = 1;
    }
    if (total_unit > 2) {
      digitalWrite(relay, HIGH);
      flag1 = 0;
      flag2 = 0;
    }
    if ((currentTime - previousTime) >= timeInterval) {
    if (gsm.available() > 0) {
      responseData = gsm.readStringUntil("\n");
      delay(1000);
      Serial.println(responseData);
      parse();
      delay(1000);
      String bill_search = actual_sms.substring(0, 4);
      String pswd_search = actual_sms.substring(0, 5);
      if (actual_sms == "generate" && senderNumber == OperatorPh) {
        random_generate();
        code_sent_EPC();
        Serial.println(F("Code send to message"));
      }
      if (actual_sms == "check bill" && senderNumber == userPhone) {
        total_unit_str = readStringFromEEPROM(110);
        total_unit = total_unit_str.toInt();
        price = total_unit * unitPrice;
        send_message(userPhone, "Your balance is " + String(price) + "Ks.");
        Serial.println(F("Check bill message sent completed"));
      }

      if (bill_search == "bill" && senderNumber == userPhone) {
        codeGetting();
        delay(1000);
        bill = actual_sms.substring(actual_sms.indexOf("bill") + 4, actual_sms.lastIndexOf('*'));
        if (bill == code1) {
          total_unit_str = readStringFromEEPROM(110);
          total_unit = total_unit_str.toInt();
          total_unit = total_unit + 10;
          EEPROM.write(110, total_unit);
          writeStringToEEPROM(110, String(total_unit));
          digitalWrite(relay, HIGH);
          total_unit_str = readStringFromEEPROM(110);
          total_unit = total_unit_str.toInt();
          price = total_unit * unitPrice;
          writeStringToEEPROM(0, "******");
          send_message(userPhone, "Your balance is " + String(price) + "Ks.");
        }
        else if (bill == code2) {
          total_unit_str = readStringFromEEPROM(110);
          total_unit = total_unit_str.toInt();
          total_unit = total_unit + 10;
          EEPROM.write(110, total_unit);
          writeStringToEEPROM(110, String(total_unit));
          digitalWrite(relay, HIGH);
          total_unit_str = readStringFromEEPROM(110);
          total_unit = total_unit_str.toInt();
          price = total_unit * unitPrice;
          writeStringToEEPROM(10, "******");
          send_message(userPhone, "Your balance is " + String(price) + "Ks.");
        }
        else if (bill == code3) {
          total_unit_str = readStringFromEEPROM(110);
          total_unit = total_unit_str.toInt();
          total_unit = total_unit + 10;
          EEPROM.write(110, total_unit);
          writeStringToEEPROM(110, String(total_unit));
          digitalWrite(relay, HIGH);
          total_unit_str = readStringFromEEPROM(110);
          total_unit = total_unit_str.toInt();
          price = total_unit * unitPrice;
          writeStringToEEPROM(20, "******");
          send_message(userPhone, "Your balance is " + String(price) + "Ks.");
        }
        else if (bill == code4) {
          total_unit_str = readStringFromEEPROM(110);
          total_unit = total_unit_str.toInt();
          total_unit = total_unit + 20;
          EEPROM.write(110, total_unit);
          writeStringToEEPROM(110, String(total_unit));
          digitalWrite(relay, HIGH);
          total_unit_str = readStringFromEEPROM(110);
          total_unit = total_unit_str.toInt();
          price = total_unit * unitPrice;
          writeStringToEEPROM(30, "******");
          send_message(userPhone, "Your balance is " + String(price) + "Ks.");
        }
        else if (bill == code5) {
          total_unit_str = readStringFromEEPROM(110);
          total_unit = total_unit_str.toInt();
          total_unit = total_unit + 20;
          EEPROM.write(110, total_unit);
          writeStringToEEPROM(110, String(total_unit));
          digitalWrite(relay, HIGH);
          total_unit_str = readStringFromEEPROM(110);
          total_unit = total_unit_str.toInt();
          price = total_unit * unitPrice;
          writeStringToEEPROM(40, "******");
          send_message(userPhone, "Your balance is " + String(price) + "Ks.");
        }
        else if (bill == code6) {
          total_unit_str = readStringFromEEPROM(110);
          total_unit = total_unit_str.toInt();
          total_unit = total_unit + 20;
          EEPROM.write(110, total_unit);
          writeStringToEEPROM(110, String(total_unit));
          digitalWrite(relay, HIGH);
          total_unit_str = readStringFromEEPROM(110);
          total_unit = total_unit_str.toInt();
          price = total_unit * unitPrice;
          writeStringToEEPROM(50, "******");
          send_message(userPhone, "Your balance is " + String(price) + "Ks.");
        }
        else {
          send_message(userPhone, "Wrong Bill Code!");
        }
      }
    }
  }
}

void parse() {
  if (responseData.indexOf("CMT:") > 0) {
    senderNumber = responseData.substring(responseData.indexOf("+CMT: ") + 7, responseData.indexOf("+CMT: ") + 20);
  }
  if (responseData.indexOf("CMT:") > 0) {
    int m = 1 + responseData.lastIndexOf('"');
    int n = responseData.length();
    actual_sms = responseData.substring(responseData.indexOf("+CMT: ") + m, responseData.indexOf("+CMT: ") + n - 4);
    lcd.backlight();
    lcd.setCursor(0, 1);
    lcd.print("  SMS Received  ");
    delay(2000);
    lcd.clear();
  }
}
void send_message (String phoneno, String message) {
  gsm.println("AT+CMGF=1");
  delay(500);
  gsm.print("AT+CMGS=\"");
  gsm.print(phoneno);
  gsm.println("\"\r");
  delay(500);
  gsm.print(message);
  delay(100);
  gsm.println((char)26);
  delay(500);
  lcd.setCursor(0, 1);
  lcd.print("SMS Sending Done");
  delay(2000);
  lcd.clear();
}

void phoneGetting() {
  userPhone = readStringFromEEPROM(140);
  OperatorPh = readStringFromEEPROM(160);
}

void gsmbegin() {
  gsm.begin(9600);
  gsm.setTimeout(1000);
  delay(100);
  gsm.println("AT\r");
  delay(100);
  gsm.println("ATE0\r");
  delay(100);
  gsm.println("AT+IPR=9600\r");
  delay(100);
  gsm.println("AT+CMGF=1\r");
  delay(100);
  gsm.println("AT+CNMI=2,2,0,0,0\r");
  delay(100);
  gsm.println("AT+CLIP=1\r\n");
  delay(100);
  gsm.println("AT+CMGDA=\"DEL ALL\"\r");
  delay(100);
}

void gsm_init() {
  boolean at_flag = 1;
  while (at_flag) {
    gsm.println ("AT");
    while (gsm.available() > 0) {
      if (gsm.find("OK"))
        lcd.setCursor(0, 0);
      lcd.print ("Finding Network.");
      Serial.println(F("Finding Network."));
      at_flag = 0;
    }
    delay(1000);
  }
  lcd.setCursor(0, 0);
  lcd.print (" GSM Connected! ");
  Serial.println(F("Mobile Network Connected"));
  delay(1000);
}


void code_sent_EPC() {
  gsm.println("AT+CMGF=1");
  delay(500);
  gsm.print("AT+CMGS=\"");
  gsm.print(OperatorPh);
  gsm.println("\"\r");
  delay(500);
  gsm.println("1000Ks numbers are");
  gsm.println(gen_code1);
  gsm.println(gen_code2);
  gsm.println(gen_code3);
  delay(100);
  gsm.println((char)26);
  delay(500);
  lcd.setCursor(0, 1);
  lcd.print("SMS Sending Done");
  delay(3000);
  lcd.clear();

  gsm.println("AT+CMGF=1");
  delay(500);
  gsm.print("AT+CMGS=\"");
  gsm.print(OperatorPh);
  gsm.println("\"\r");
  delay(500);
  gsm.println("2000Ks numbers are");
  gsm.println(gen_code4);
  gsm.println(gen_code5);
  gsm.println(gen_code6);
  delay(100);
  gsm.println((char)26);
  delay(500);
  lcd.setCursor(0, 1);
  lcd.print("SMS Sending Done");
  delay(2000);
  lcd.clear();
}
void random_generate() {
  randNumber = random(100000, 999999);
  gen_code1 = randNumber;
  Serial.print(F("Code 1 = "));
  Serial.println(gen_code1);

  randNumber = random(100000, 999999);
  gen_code2 = randNumber;
  Serial.print(F("Code 2 = "));
  Serial.println(gen_code2);

  randNumber = random(100000, 999999);
  gen_code3 = randNumber;
  Serial.print(F("Code 3 = "));
  Serial.println(gen_code3);

  randNumber = random(100000, 999999);
  gen_code4 = randNumber;
  Serial.print(F("Code 4 = "));
  Serial.println(gen_code4);

  randNumber = random(100000, 999999);
  gen_code5 = randNumber;
  Serial.print(F("Code 5 = "));
  Serial.println(gen_code5);

  randNumber = random(100000, 999999);
  gen_code6 = randNumber;
  Serial.print(F("Code 6 = "));
  Serial.println(gen_code6);

  writeStringToEEPROM(0, gen_code1);
  writeStringToEEPROM(10, gen_code2);
  writeStringToEEPROM(20, gen_code3);
  writeStringToEEPROM(30, gen_code4);
  writeStringToEEPROM(40, gen_code5);
  writeStringToEEPROM(50, gen_code6);
}

void codeGetting () {
  code1 = readStringFromEEPROM(0);
  code2 = readStringFromEEPROM(10);
  code3 = readStringFromEEPROM(20);
  code4 = readStringFromEEPROM(30);
  code5 = readStringFromEEPROM(40);
  code6 = readStringFromEEPROM(50);
  
}
void writeStringToEEPROM(int addrOffset, const String &strToWrite) {
  byte len = strToWrite.length();
  EEPROM.write(addrOffset, len);
  for (int i = 0; i < len; i++) {
    EEPROM.write(addrOffset + 1 + i, strToWrite[i]);
  }
}

String readStringFromEEPROM(int addrOffset) {
  int newStrLen = EEPROM.read (addrOffset);
  char data[newStrLen + 1];
  for (int i = 0; i < newStrLen; i++) {
    data[i] = EEPROM.read(addrOffset + 1 + i);
  }
  data[newStrLen] = '\0';
  return String(data);
}
